{"version":3,"file":"blogRoutes.js","names":["_express","_interopRequireDefault","require","_blogController","router","express","Router","get","getAllBlogs","post","CreatePost","createComment","patch","updatePost","route","getSinglePost","deletePost","_default","exports"],"sources":["../../../src/routes/blogRoutes.js"],"sourcesContent":["import express from \"express\";\nimport {\n  getAllBlogs,\n  CreatePost,\n  updatePost,\n  getSinglePost,\n  deletePost,\n  createComment,\n} from \"../controllers/blogController\";\n\nconst router = express.Router();\n\nrouter.get(\"/getAllBlogs\", getAllBlogs);\nrouter.post(\"/postBlog\", CreatePost);\nrouter.post(\"/comment/:id\", createComment);\nrouter.patch(\"/update/:id\", updatePost);\nrouter.route(\"/blog/:id\").get(getSinglePost).delete(deletePost);\n\n\n\n/**\n * @swagger\n * /api/v1/getAllBlogs:\n *   get:\n *     summary: Get all blog posts\n *     description: Retrieve all blog posts from the database.\n *     responses:\n *       200:\n *         description: A list of all blog posts.\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 status:\n *                   type: string\n *                   description: The status of the request.\n *                 number:\n *                   type: number\n *                   description: The number of blog posts returned.\n *                 blogs:\n *                   type: array\n *       404:\n *         description: Failed to retrieve blog posts.\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 status:\n *                   type: string\n *                   description: The status of the request.\n *                 error:\n *                   type: string\n *                   description: The error message.\n */\n\n/**\n * @swagger\n * /api/v1/blog/{id}:\n *   get:\n *     summary: Retrieve a single blog post by ID.\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         schema:\n *           type: string\n *         description: The ID of the blog post to retrieve.\n *     responses:\n *       200:\n *         description: The blog post with the specified ID.\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 status:\n *                   type: string\n *                   example: success\n *       400:\n *         description: The specified ID was not found.\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 status:\n *                   type: string\n *                   example: failed\n *                 message:\n *                   type: string\n *                   example: Id of post not found\n */\n\n\n\n/**\n * @swagger\n * /api/v1/postBlog:\n *   post:\n *     summary: Create a new blog post\n *     tags:\n *       - post blog \n *     requestBody:\n *       required: true\n *       content:\n *         multipart/form-data:\n *           schema:\n *             type: object\n *             properties:\n *               title:\n *                 type: string\n *               description:\n *                 type: string\n *               image:\n *                 type: string\n *                 format: binary\n *     responses:\n *       201:\n *         description: Blog post created successfully\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 status:\n *                   type: string\n *                   example: success\n *                 message:\n *                   type: string\n *                   example: Blog created successfully\n *                 content:\n *                   type: object\n *       400:\n *         description: Bad request\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 status:\n *                   type: string\n *                   example: failed\n *                 error:\n *                   type: string\n *                   example: Error message\n */\n\n\n/**\n * @swagger\n * /api/v1/update/{id}:\n *   patch:\n *     summary: Update a post by ID\n *     description: Update a post's title, description, and image by ID\n *     tags:\n *       - Posts\n *     parameters:\n *       - name: id\n *         in: path\n *         description: ID of the post to update\n *         required: true\n *         schema:\n *           type: string\n *     requestBody:\n *       required: true\n *       content:\n *         multipart/form-data:\n *           schema:\n *             type: object\n *             properties:\n *               title:\n *                 type: string\n *                 description: Title of the post\n *               description:\n *                 type: string\n *                 description: Description of the post\n *               image:\n *                 type: string\n *                 format: binary\n *                 description: Image file to upload for the post\n *     responses:\n *       '200':\n *         description: Post updated successfully\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 status:\n *                   type: string\n *                   description: Status of the request\n *                   example: \"success\"\n *                 message:\n *                   type: string\n *                   description: Message indicating the post was updated successfully\n *                   example: \"Post updated successfully\"\n *       '400':\n *         description: Invalid request parameters or image file\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 status:\n *                   type: string\n *                   description: Status of the request\n *                   example: \"failed\"\n *                 error:\n *                   type: string\n *                   description: Error message indicating why the request failed\n */\n\n\n/**\n * Delete a blog post by ID\n * \n * @swagger\n * /api/v1/blog/{id}:\n *   delete:\n *     summary: Delete a blog post by ID\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         description: ID of the blog post to delete\n *         schema:\n *           type: string\n *     responses:\n *       204:\n *         description: Post deleted successfully\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 status:\n *                   type: string\n *                   example: success\n *                 message:\n *                   type: string\n *                   example: Post deleted successfully\n *       400:\n *         description: Post not found\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 status:\n *                   type: string\n *                   example: failed\n *                 message:\n *                   type: string\n *                   example: Id of post not found\n */\n\n/**\n * Create a new comment on a blog post\n * \n * @swagger\n * /api/v1/comment/{id}:\n *   post:\n *     summary: Create a new comment on a blog post\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         description: ID of the blog post to add a comment to\n *         schema:\n *           type: string\n *     requestBody:\n *       required: true\n *       description: Comment details\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *               name:\n *                 type: string\n *               email:\n *                 type: string\n *               comment:\n *                 type: string\n *     responses:\n *       201:\n *         description: Comment created successfully\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 status:\n *                   type: string\n *                   example: success\n *                 message:\n *                   type: string\n *                   example: Comment created successfully\n *                 comment:\n *                   type: object\n *                   example: {\n *                     \"_id\": \"1234567890\",\n *                     \"name\": \"John Doe\",\n *                     \"email\": \"johndoe@example.com\",\n *                     \"comment\": \"This is a great blog post!\",\n *                     \"createdAt\": \"2023-02-20T00:00:00.000Z\"\n *                   }\n *       400:\n *         description: Blog post not found\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 status:\n *                   type: string\n *                   example: failed\n *                 message:\n *                   type: string\n *                   example: Comment could not be created - blog post not found\n */\nexport default router;"],"mappings":";;;;;;;AAAA,IAAAA,QAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,eAAA,GAAAD,OAAA;AASA,IAAME,MAAM,GAAGC,mBAAO,CAACC,MAAM,CAAC,CAAC;AAE/BF,MAAM,CAACG,GAAG,CAAC,cAAc,EAAEC,2BAAW,CAAC;AACvCJ,MAAM,CAACK,IAAI,CAAC,WAAW,EAAEC,0BAAU,CAAC;AACpCN,MAAM,CAACK,IAAI,CAAC,cAAc,EAAEE,6BAAa,CAAC;AAC1CP,MAAM,CAACQ,KAAK,CAAC,aAAa,EAAEC,0BAAU,CAAC;AACvCT,MAAM,CAACU,KAAK,CAAC,WAAW,CAAC,CAACP,GAAG,CAACQ,6BAAa,CAAC,UAAO,CAACC,0BAAU,CAAC;;AAI/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhEA,IAAAC,QAAA,GAAAC,OAAA,cAiEed,MAAM"}